C51 COMPILER V9.60.7.0   MAIN                                                              09/06/2024 17:11:43 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil\c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mai
                    -n.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "math.h"
   3          #include "stdio.h"
   4          #include "sys/led.h"
   5          #include "sys/iic.h"
   6          
   7          
   8          unsigned char BUF[8]=0;              //数据缓冲区
   9          unsigned char last_x,last_y;
  10          int last_angle=-10;
  11          unsigned char code position[360][2]={{120,25},{119,25},{117,25},{116,25},{114,25},{113,25},{112,25},{110,2
             -6},{109,26},{107,26},{106,26},{105,26},{103,27},{102,27},{101,27},{99,28},{98,28},{97,28},{95,29},{94,29},{93,30},{91,30
             -},{90,31},{89,31},{87,32},{86,32},{85,33},{84,34},{82,34},{81,35},{80,36},{79,36},{78,37},{76,38},{75,39},{74,39},{73,40
             -},{72,41},{71,42},{70,43},{69,44},{68,45},{66,46},{65,46},{64,47},{63,48},{62,49},{61,50},{61,51},{60,53},{59,54},{58,55
             -},{57,56},{56,57},{55,58},{54,59},{54,60},{53,61},{52,63},{51,64},{51,65},{50,66},{49,67},{49,69},{48,70},{47,71},{47,72
             -},{46,74},{46,75},{45,76},{45,78},{44,79},{44,80},{43,82},{43,83},{43,84},{42,86},{42,87},{42,88},{41,90},{41,91},{41,92
             -},{41,94},{41,95},{40,97},{40,98},{40,99},{40,101},{40,102},{40,104},{40,105},{40,106},{40,108},{40,109},{40,111},{40,11
             -2},{40,113},{41,115},{41,116},{41,118},{41,119},{41,120},{42,122},{42,123},{42,124},{43,126},{43,127},{43,128},{44,130},
             -{44,131},{45,132},{45,134},{46,135},{46,136},{47,138},{47,139},{48,140},{49,141},{49,143},{50,144},{51,145},{51,146},{52
             -,147},{53,149},{54,150},{54,151},{55,152},{56,153},{57,154},{58,155},{59,156},{60,157},{61,159},{61,160},{62,161},{63,16
             -2},{64,163},{65,164},{66,164},{68,165},{69,166},{70,167},{71,168},{72,169},{73,170},{74,171},{75,171},{76,172},{78,173},
             -{79,174},{80,174},{81,175},{82,176},{84,176},{85,177},{86,178},{87,178},{89,179},{90,179},{91,180},{93,180},{94,181},{95
             -,181},{97,182},{98,182},{99,182},{101,183},{102,183},{103,183},{105,184},{106,184},{107,184},{109,184},{110,184},{112,18
             -5},{113,185},{114,185},{116,185},{117,185},{119,185},{120,185},{121,185},{123,185},{124,185},{126,185},{127,185},{128,18
             -5},{130,184},{131,184},{133,184},{134,184},{135,184},{137,183},{138,183},{139,183},{141,182},{142,182},{143,182},{145,18
             -1},{146,181},{147,180},{149,180},{150,179},{151,179},{153,178},{154,178},{155,177},{156,176},{158,176},{159,175},{160,17
             -4},{161,174},{162,173},{164,172},{165,171},{166,171},{167,170},{168,169},{169,168},{170,167},{171,166},{172,165},{174,16
             -4},{175,164},{176,163},{177,162},{178,161},{179,160},{179,159},{180,157},{181,156},{182,155},{183,154},{184,153},{185,15
             -2},{186,151},{186,150},{187,149},{188,147},{189,146},{189,145},{190,144},{191,143},{191,141},{192,140},{193,139},{193,13
             -8},{194,136},{194,135},{195,134},{195,132},{196,131},{196,130},{197,128},{197,127},{197,126},{198,124},{198,123},{198,12
             -2},{199,120},{199,119},{199,118},{199,116},{199,115},{200,113},{200,112},{200,111},{200,109},{200,108},{200,106},{200,10
             -5},{200,104},{200,102},{200,101},{200,99},{200,98},{200,97},{199,95},{199,94},{199,92},{199,91},{199,90},{198,88},{198,8
             -7},{198,86},{197,84},{197,83},{197,82},{196,80},{196,79},{195,78},{195,76},{194,75},{194,74},{193,72},{193,71},{192,70},
             -{191,69},{191,67},{190,66},{189,65},{189,64},{188,63},{187,61},{186,60},{186,59},{185,58},{184,57},{183,56},{182,55},{18
             -1,54},{180,53},{179,51},{179,50},{178,49},{177,48},{176,47},{175,46},{174,46},{172,45},{171,44},{170,43},{169,42},{168,4
             -1},{167,40},{166,39},{165,39},{164,38},{162,37},{161,36},{160,36},{159,35},{158,34},{156,34},{155,33},{154,32},{153,32},
             -{151,31},{150,31},{149,30},{147,30},{146,29},{145,29},{143,28},{142,28},{141,28},{139,27},{138,27},{137,27},{135,26},{13
             -4,26},{133,26},{131,26},{130,26},{128,25},{127,25},{126,25},{124,25},{123,25},{121,25}};
  12          
  13          
  14          //通过地磁场在水平面方向X，Y计算相对于地理北极的角度
  15          void get_direction(angle){
  16   1         unsigned int t;
  17   1            LCD_Fill(64,93,184,117,BLACK);   //清空
  18   1          if((angle < 22.5) || (angle > 337.5 )){
  19   2            if(angle>=100){
  20   3              LCD_ShowNum(78,93,angle,3); 
  21   3              LCD_ShowFontHZ(114,93,"°北");
  22   3            }
  23   2            else{
  24   3              LCD_ShowNum(84,93,angle,2); 
  25   3              LCD_ShowFontHZ(108,93,"°北");
  26   3            }
  27   2          } 
C51 COMPILER V9.60.7.0   MAIN                                                              09/06/2024 17:11:43 PAGE 2   

  28   1          if((angle > 22.5) && (angle < 67.5 )){
  29   2            LCD_ShowNum(72,93,angle,2); 
  30   2            LCD_ShowFontHZ(96,93,"°东北");
  31   2          }
  32   1          if((angle > 67.5) && (angle < 112.5 )){
  33   2            if(angle>=100){
  34   3              LCD_ShowNum(78,93,angle,3); 
  35   3              LCD_ShowFontHZ(114,93,"°东");
  36   3            }else{
  37   3              LCD_ShowNum(84,93,angle,2); 
  38   3              LCD_ShowFontHZ(108,93,"°东");
  39   3            }
  40   2          }
  41   1          if((angle > 112.5) && (angle < 157.5 )){
  42   2              LCD_ShowNum(66,93,angle,3); 
  43   2              LCD_ShowFontHZ(102,93,"°东南");
  44   2          }
  45   1          if((angle > 157.5) && (angle < 202.5 )){
  46   2              LCD_ShowNum(78,93,angle,3); 
  47   2              LCD_ShowFontHZ(114,93,"°南");
  48   2          }
  49   1          if((angle > 202.5) && (angle < 247.5 )){
  50   2              LCD_ShowNum(66,93,angle,3); 
  51   2              LCD_ShowFontHZ(102,93,"°西南");
  52   2          }
  53   1          if((angle > 247.5) && (angle < 292.5 )){
  54   2            LCD_ShowNum(78,93,angle,3); 
  55   2              LCD_ShowFontHZ(114,93,"°西");
  56   2          }
  57   1          
  58   1          if((angle > 292.5) && (angle < 337.5 )){
  59   2            LCD_ShowNum(66,93,angle,3); 
  60   2              LCD_ShowFontHZ(102,93,"°西北");
  61   2          }
  62   1        //显示动态指针
  63   1          LCD_Fill(last_x-5,last_y-5,last_x+5,last_y+5,BLACK);   //清空
  64   1          //t=angle*3.14/180;
  65   1          t=angle%360;
  66   1          last_x=position[t][0];
  67   1          last_y=position[t][1];
  68   1      //    last_y=cos(t)*80;
  69   1      //    last_y=105-last_y;
  70   1      //    last_x=sin(t)*80;
  71   1      //    last_x=120-last_x;
  72   1          
  73   1          LCD_DrawPoint(last_x,last_y,RED);//画点 
  74   1          LCD_DrawPoint(last_x-1,last_y-1,RED);//画点 
  75   1          LCD_DrawPoint(last_x+1,last_y-1,RED);//画点 
  76   1          LCD_DrawPoint(last_x-1,last_y+1,RED);//画点 
  77   1          LCD_DrawPoint(last_x+1,last_y+1,RED);//画点 
  78   1          Draw_Circle(last_x,last_y,1,RED);
  79   1          Draw_Circle(last_x,last_y,2,RED);
  80   1          Draw_Circle(last_x,last_y,3,RED);
  81   1          Draw_Circle(last_x,last_y,4,RED);
  82   1          Draw_Circle(last_x,last_y,5,RED);
  83   1          
  84   1      }
  85          void main(){
  86   1        int X=0,Y=0,Z=0;
  87   1        double Angle_XY=0;
  88   1        //液晶屏初始化
  89   1        LCD_Init();
C51 COMPILER V9.60.7.0   MAIN                                                              09/06/2024 17:11:43 PAGE 3   

  90   1        LCD_Clear(0x0000);
  91   1        Init_QMC5883();
  92   1        //画圆
  93   1        Draw_Circle(120,105,90,WHITE);
  94   1        Draw_Circle(120,105,89,WHITE);
  95   1        //画标志位
  96   1        LCD_DrawLine(120,15,113,3,WHITE);
  97   1        LCD_DrawLine(120,15,127,3,WHITE);
  98   1        LCD_DrawLine(113,3,127,3,WHITE);
  99   1        LCD_DrawLine(113,4,127,4,WHITE);
 100   1        LCD_DrawLine(114,5,126,5,WHITE);
 101   1        LCD_DrawLine(114,6,126,6,WHITE);
 102   1        LCD_DrawLine(115,7,125,7,WHITE);
 103   1        LCD_DrawLine(115,8,125,8,WHITE);
 104   1        LCD_DrawLine(116,9,124,9,WHITE);
 105   1        LCD_DrawLine(116,10,124,10,WHITE);
 106   1        LCD_DrawLine(117,11,123,11,WHITE);
 107   1        LCD_DrawLine(118,12,122,12,WHITE);
 108   1        LCD_DrawLine(118,13,122,13,WHITE);
 109   1        LCD_DrawLine(119,14,121,14,WHITE);
 110   1        LCD_DrawPoint(120,15,WHITE);//画点 
 111   1        //循环进行各项测试  
 112   1        while(1)
 113   1        { 
 114   2            Multiple_Read_QMC5883();              //连续读取三轴角度数据，存储在BUF中
 115   2              //---------显示XY轴
 116   2              X=BUF[1] << 8 | BUF[0]; //Combine MSB and LSB of X Data output register  最高有效位
 117   2              Y=BUF[3] << 8 | BUF[2]; //Combine MSB and LSB of Y Data output register
 118   2            //  Z=BUF[5] << 8 | BUF[4]; //Combine MSB and LSB of Z Data output register
 119   2              
 120   2              if(X>0x7fff)X-=0xffff;    
 121   2              if(Y>0x7fff)Y-=0xffff;
 122   2              //if(Z>0x7fff)Z-=0xffff; 
 123   2      
 124   2              Angle_XY= atan2((double)Y,(double)X)* (180 / 3.14159265) + 180; //计算XY平面角度;  
 125   2              
 126   2      
 127   2              if(abs((int)Angle_XY-last_angle)>2){
 128   3                get_direction(Angle_XY);       //计算XY平面角度数据和显示
 129   3                last_angle=(int)Angle_XY;
 130   3              }
 131   2              
 132   2        }   
 133   1      }
 134          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1445    ----
   CONSTANT SIZE    =    768    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
